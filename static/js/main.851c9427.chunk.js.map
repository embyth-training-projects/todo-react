{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/status-filter/index.js","components/status-filter/status-filter.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/add-item-form/index.js","components/add-item-form/add-item-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","this","props","toDo","done","className","Component","SearchPanel","state","searchQuery","_onSearchInputChange","bind","evt","preventDefault","target","value","setState","onSearchInputChange","type","placeholder","onChange","StatusFilter","buttons","name","label","filter","onFilterChange","buttonsNodes","map","classNames","onClick","TodoListItem","textContent","isImportant","isDone","onDeleteButtonClick","onImportantToggleClick","onDoneToggleClick","TodoList","todos","listItems","item","id","itemProps","AddItemForm","onAddItemInputChange","onFormSubmit","length","onAddButtonClick","App","_idCounter","todoData","_createTodoItem","currentFilter","deleteListItemHandler","addListItemHandler","doneItemToggleHandler","importantItemToggleHandler","searchInputChangeHandler","filterChangeHandler","array","propName","index","findIndex","oldItem","newItem","slice","items","toLowerCase","indexOf","_toggleProperty","text","doneAmount","todoAmount","visibleItems","_filterItems","_searchItems","rootNode","document","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.851c9427.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;\n","import React, {Component} from 'react';\n\nimport './app-header.css';\n\nexport default class AppHeader extends Component {\n  render() {\n    const {toDo, done} = this.props;\n\n    return (\n      <div className='app-header d-flex'>\n        <h1>Todo List</h1>\n        <h2>{toDo} more to do, {done} done</h2>\n      </div>\n    );\n  }\n}\n","import SearchPanel from './search-panel';\n\nexport default SearchPanel;\n","import React, {Component} from 'react';\n\nimport './search-panel.css'\n\nexport default class SearchPanel extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      searchQuery: ``\n    };\n\n    this._onSearchInputChange = this._onSearchInputChange.bind(this);\n  }\n\n  _onSearchInputChange(evt) {\n    evt.preventDefault();\n\n    const searchQuery = evt.target.value;\n    this.setState({searchQuery});\n    this.props.onSearchInputChange(searchQuery);\n  }\n\n  render() {\n    return <input type='text' className='form-control search-input' placeholder='Type here to search' value={this.state.searchQuery} onChange={this._onSearchInputChange} />\n  }\n}\n","import StatusFilter from './status-filter';\n\nexport default StatusFilter;\n","import React, {Component} from 'react';\n\nexport default class StatusFilter extends Component {\n  constructor() {\n    super();\n\n    this.buttons = [\n      {name: `all`, label: `All`},\n      {name: `active`, label: `Active`},\n      {name: `done`, label: `Done`},\n    ];\n  }\n\n  render() {\n    const {filter, onFilterChange} = this.props;\n\n    const buttonsNodes = this.buttons.map(({name, label}) => {\n      const isActive = filter === name;\n      const classNames = `btn ${isActive ? `btn-info` : `btn-outline-secondary`}`;\n\n      return <button type='button' className={classNames} key={name} onClick={() => onFilterChange(name)}>{label}</button>\n    })\n\n    return (\n      <div className='btn-group'>\n        {buttonsNodes}\n      </div>\n    );\n  }\n};\n","import TodoListItem from './todo-list-item';\n\nexport default TodoListItem;\n","import React, {Component} from 'react';\n\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends Component {\n  render() {\n    const { textContent, isImportant, isDone, onDeleteButtonClick, onImportantToggleClick, onDoneToggleClick } = this.props;\n\n    let classNames = `list-group-item todo-list-item ${isDone ? `done` : ``} ${isImportant ? `important` : ``}`;\n\n    return (\n      <li className={classNames}>\n        <span className='todo-list-item-label' onClick={onDoneToggleClick}>\n          {textContent}\n        </span>\n\n        <button type='button' className='btn btn-outline-success btn-sm float-right' onClick={onImportantToggleClick}>\n          <i className='fa fa-exclamation' />\n        </button>\n        <button type='button' className='btn btn-outline-danger btn-sm float-right' onClick={onDeleteButtonClick}>\n          <i className='fa fa-trash-o' />\n        </button>\n      </li>\n    );\n  }\n}\n","import TodoList from './todo-list';\n\nexport default TodoList;\n","import React, {Component} from 'react';\n\nimport TodoListItem from '../todo-list-item';\nimport './todo-list.css';\n\nexport default class TodoList extends Component {\n  render() {\n    const { todos, onDeleteButtonClick, onImportantToggleClick, onDoneToggleClick } = this.props;\n\n    const listItems = todos.map((item) => {\n      const {id, ...itemProps} = item;\n\n      return (\n        <TodoListItem\n          key={id}\n          { ...itemProps }\n          onDeleteButtonClick={() => onDeleteButtonClick(id)}\n          onImportantToggleClick={() => onImportantToggleClick(id)}\n          onDoneToggleClick={() => onDoneToggleClick(id)}\n        />\n      );\n    });\n\n    return (\n      <ul className='list-group todo-list'>\n        { listItems }\n      </ul>\n    )\n  }\n}\n","import AddItemForm from './add-item-form';\n\nexport default AddItemForm;\n","import React, {Component} from 'react';\n\nimport './add-item-form.css';\n\nexport default class AddItemForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      textContent: ``,\n    };\n\n    this.onAddItemInputChange = this.onAddItemInputChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  onAddItemInputChange(evt) {\n    this.setState({\n      textContent: evt.target.value\n    })\n  }\n\n  onFormSubmit(evt) {\n    evt.preventDefault();\n\n    const {textContent} = this.state;\n\n    if (textContent.length === 0) {\n      return;\n    }\n\n    this.props.onAddButtonClick(textContent);\n    this.setState({\n      textContent: ``\n    })\n  }\n\n  render() {\n    return (\n      <form className='add-item-form d-flex'>\n        <input type='text' className='form-control' placeholder='What needs to be done?' onChange={this.onAddItemInputChange} value={this.state.textContent} />\n        <button type='button' className='btn btn-outline-secondary' onClick={this.onFormSubmit}>Add item</button>\n      </form>\n    )\n  }\n}\n","import App from './app';\n\nexport default App;\n","import React, {Component} from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport StatusFilter from '../status-filter';\nimport TodoList from '../todo-list';\nimport AddItemForm from '../add-item-form';\n\nimport './app.css';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this._idCounter = 1;\n    this.state = {\n      todoData: [\n        this._createTodoItem(`Drink Coffee`),\n        this._createTodoItem(`Build React App`),\n        this._createTodoItem(`Have a Lunch`),\n      ],\n      searchQuery: ``,\n      currentFilter: `all`,\n    };\n\n    this.deleteListItemHandler = this.deleteListItemHandler.bind(this);\n    this.addListItemHandler = this.addListItemHandler.bind(this);\n    this.doneItemToggleHandler = this.doneItemToggleHandler.bind(this);\n    this.importantItemToggleHandler = this.importantItemToggleHandler.bind(this);\n    this.searchInputChangeHandler = this.searchInputChangeHandler.bind(this);\n    this.filterChangeHandler = this.filterChangeHandler.bind(this);\n  }\n\n  _createTodoItem(textContent) {\n    return {\n      textContent,\n      isImportant: false,\n      isDone: false,\n      id: this._idCounter++,\n    }\n  }\n\n  _toggleProperty(array, id, propName) {\n    const index = array.findIndex((item) => item.id === id);\n\n    const oldItem = array[index];\n    const newItem = {\n      ...oldItem,\n      [propName]: !oldItem[propName]\n    };\n\n    return [\n      ...array.slice(0, index),\n      newItem,\n      ...array.slice(index + 1)\n    ];\n  }\n\n  _searchItems(items, searchQuery) {\n    if (searchQuery.length === 0) {\n      return items;\n    }\n\n    return items.filter((item) => item.textContent.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1);\n  }\n\n  _filterItems(items, filter) {\n    switch (filter) {\n      case `all`:\n        return items;\n      case `active`:\n        return items.filter((item) => !item.isDone);\n      case `done`:\n        return items.filter((item) => item.isDone);\n      default:\n        return items;\n    }\n  }\n\n  searchInputChangeHandler(searchQuery) {\n    this.setState({searchQuery});\n  }\n\n  filterChangeHandler(filter) {\n    this.setState({currentFilter: filter});\n  }\n\n  doneItemToggleHandler(id) {\n    this.setState(({todoData}) => {\n      return {\n        todoData: this._toggleProperty(todoData, id, `isDone`)\n      }\n    });\n  }\n\n  importantItemToggleHandler(id) {\n    this.setState(({todoData}) => {\n      return {\n        todoData: this._toggleProperty(todoData, id, `isImportant`)\n      }\n    });\n  }\n\n  deleteListItemHandler(id) {\n    this.setState(({todoData}) => {\n      const index = todoData.findIndex((item) => item.id === id);\n\n      return {\n        todoData: [\n          ...todoData.slice(0, index),\n          ...todoData.slice(index + 1)\n        ]\n      }\n    });\n  }\n\n  addListItemHandler(text) {\n    this.setState(({todoData}) => {\n      return {\n        todoData: [\n          ...todoData,\n          this._createTodoItem(text)\n        ]\n      }\n    });\n  }\n\n  render() {\n    const { todoData, searchQuery, currentFilter } = this.state;\n\n    const doneAmount = todoData.filter((item) => item.isDone).length;\n    const todoAmount = todoData.length - doneAmount;\n\n    const visibleItems = this._filterItems(this._searchItems(todoData, searchQuery), currentFilter);\n\n    return (\n      <div className='todo-app'>\n        <AppHeader toDo={todoAmount} done={doneAmount} />\n        <div className='top-panel d-flex'>\n          <SearchPanel onSearchInputChange={this.searchInputChangeHandler} />\n          <StatusFilter filter={currentFilter} onFilterChange={this.filterChangeHandler} />\n        </div>\n        <TodoList\n          todos={visibleItems}\n          onDeleteButtonClick={this.deleteListItemHandler}\n          onDoneToggleClick={this.doneItemToggleHandler}\n          onImportantToggleClick={this.importantItemToggleHandler}\n        />\n        <AddItemForm onAddButtonClick={this.addListItemHandler} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app'\n\nconst rootNode = document.querySelector(`#root`);\n\nReactDOM.render(<App />, rootNode);\n"],"sourceRoot":""}